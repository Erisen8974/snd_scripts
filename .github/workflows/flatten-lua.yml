name: Flatten Lua Scripts

on:
  workflow_dispatch:
    inputs:
      force_all:
        description: 'Run for all files (ignore changed files)'
        required: false
        default: 'false'
      force_files:
        description: 'Comma-separated list of files to force (e.g. moon_man,wt_doer)'
        required: false
        default: ''
  push:
    paths:
      - '*.lua'
      - 'metadata/*.meta'
      - 'metadata/*.lua'
  pull_request:
    paths:
      - '*.lua'
      - 'metadata/*.meta'
      - 'metadata/*.lua'

jobs:
  detect-files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.set-matrix.outputs.files }}
    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        run: |
          files=$(find metadata -type f -name '*.meta' -exec basename {} .meta \; | jq -R . | jq -s -c .)
          echo "files=${files}" >> $GITHUB_OUTPUT

  flatten:
    needs: detect-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.detect-files.outputs.files) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Get changed files
        id: changed
        uses: tj-actions/changed-files@v44
        with:
          files: |
            metadata/${{ matrix.file }}.meta
            metadata/${{ matrix.file }}.lua

      - name: Determine if this file should be forced
        id: should_run
        run: |
          force_all="${{ github.event.inputs.force_all }}"
          force_files="${{ github.event.inputs.force_files }}"
          file="${{ matrix.file }}"
          should_run="false"
          if [[ "$force_all" == "true" ]]; then
            should_run="true"
          elif [[ -n "$force_files" ]]; then
            IFS=',' read -ra arr <<< "$force_files"
            for f in "${arr[@]}"; do
              if [[ "$f" == "$file" ]]; then
                should_run="true"
                break
              fi
            done
          fi
          echo "should_run=$should_run" >> $GITHUB_OUTPUT

      - name: Clone target repo for sources
        run: |
          git clone --depth 1 https://x-access-token:${{ secrets.FLAT_SND_TOKEN }}@github.com/Erisen8974/flat_SND_scripts.git flat_snd_scripts

      - name: Check if any dependency in sources file changed
        id: sources_changed
        run: |
          file="${{ matrix.file }}"
          sources_file="flat_snd_scripts/${file}_flat.lua.sources"
          should_run="false"
          if [[ -f "$sources_file" ]]; then
            while IFS= read -r dep; do
              if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -Fxq "$dep"; then
                should_run="true"
                break
              fi
            done < "$sources_file"
          fi
          echo "should_run=$should_run" >> $GITHUB_OUTPUT

      - name: Run exporter.py if relevant files changed or dependency changed
        if: steps.changed.outputs.any_changed == 'true' || steps.should_run.outputs.should_run == 'true' || steps.sources_changed.outputs.should_run == 'true'
        run: |
          python exporter.py metadata/${{ matrix.file }}.lua --output flat_snd_scripts/${{ matrix.file }}_flat.lua

      - name: Commit and push
        if: steps.changed.outputs.any_changed == 'true' || steps.should_run.outputs.should_run == 'true' || steps.sources_changed.outputs.should_run == 'true'
        run: |
          cd flat_snd_scripts
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update ${{ matrix.file }}_flat.lua [auto]" || echo "No changes to commit"
          git push